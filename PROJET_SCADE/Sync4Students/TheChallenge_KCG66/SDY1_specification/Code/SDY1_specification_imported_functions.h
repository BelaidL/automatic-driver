/*********************************************************
 **
 ** File  SDY1_specification_imported_functions.h
 **
 ** Automatically generated by SCADE RP Simu
 ** Version 6.6.4 (build i14)
 **
 ** Date of generation: 2018-01-13T10:58:28
 ** Command line: ScadeRPSimu.exe -probes -outdir C:\Users\blagha85\Desktop\PROJET_SCADE\Sync4Students\TheChallenge_KCG66\SDY1_specification\Code -prefix SDY1_specification_ -texturemax 1024 C:\Users\blagha85\Desktop\PROJET_SCADE\RP\specification.rgfx C:\Users\blagha85\Desktop\PROJET_SCADE\RP\texture_table_1.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\textures\Widgets_textures.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_fonts.sft C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Styles_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_width.swt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_stipple.sst C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\InfiniteKnob.wgfx
 *********************************************************/

#ifndef SDY1_SPECIFICATION_IMPORTED_FUNCTIONS_H
#define SDY1_SPECIFICATION_IMPORTED_FUNCTIONS_H

#include "sgl_types.h"
#include "wrapper_InfiniteKnob_mem.h"
#include "wrapper_NumericEditBox_mem.h"
#include "wrapper_PushButton_mem.h"
#include "wrapper_Slider_mem.h"

/* Imported functions */
extern void CursorBehavior(SGLbool EnableCursorPosComputation, SGLbool EnableLineSizeComputation, SGLfloat AreaSizeX, SGLfloat AreaSizeY, SGLuint8 String[255UL], SGLint32 CharIndex, SGLint32 Font, SGLfloat ClickedPositionX, SGLfloat ClickedPositionY, SGLbool NewClick, SGLint32 HorizontalAlignment, SGLfloat *CursorPosX, SGLfloat *CursorPosY, SGLbool *LineFull, SGLfloat *LineSizeX, SGLfloat *LineSizeY, SGLint32 *NbLines, SGLfloat *CharSize, SGLint32 *NewIndexAfterClick);
extern void GetFontSize_Strings(SGLint32 FontId, SGLfloat *FontSizeX, SGLfloat *FontSizeY);
extern void GetId(SGLint32 *WidgetId);
extern void ManageIndividualFocus(SGLbool RequestFocus, SGLbool RequestNoFocus, SGLint32 WidgetId, SGLbool IsContainer, SGLint32 NextWidgetId, SGLbool isInit, SGLint32 *HasFocus);
extern void SDY1_specification_keyboard(SGLint32 pKeyboard, SGLbool *pPressed, SGLbool *pReleased, SGLint32 *pCode, SGLint32 *pModifiers);
extern void SDY1_specification_locate(SGLint32 pPointer, SGLfloat *pX, SGLfloat *pY);
extern void SDY1_specification_pointer(SGLint32 pPointer, SGLbool *pPressed, SGLbool *pReleased, SGLint32 *pButton, SGLfloat *pX, SGLfloat *pY, SGLint32 *pModifiers);
extern void wrapper_InfiniteKnob(SGLbool Enabled, SGLbool MousePressed, SGLbool MouseReleased, SGLbool InsideButton, SGLfloat AngleIn, SGLbool HasFocus, SGLbool KeyEvent, SGLint32 KeyCode, SGLfloat ValuePerRevolution, SGLint32 *KnobState, SGLint32 *State, SGLfloat *AngleKnob, SGLfloat *Value, wrapper_InfiniteKnob_mem *mem);
extern void wrapper_InfiniteKnob_reset(wrapper_InfiniteKnob_mem *mem);
extern void wrapper_NumericEditBox(SGLbool MouseInside, SGLbool MousePressed, SGLint32 MouseButton, SGLbool KeyPressed, SGLint32 KeyCode, SGLint32 KeyModifier, SGLfloat Value, SGLbool SetValue, SGLfloat MinValue, SGLfloat MaxValue, SGLfloat IncrValueCoarse, SGLfloat IncrValueFine, SGLbool NewCursorIndex, SGLint32 CursorIndex, SGLbool LeadingZeros, SGLint32 DisplaySign, SGLint32 NbDigitsIntPart, SGLint32 NbDigitsFractionalPart, SGLbool HasFocus, SGLuint8 (*DisplayedString)[255UL], SGLbool *ChangeEmit, SGLfloat *ValueChange, SGLbool *CursorVisible, SGLint32 *CursorPos, SGLbool *EditMode, wrapper_NumericEditBox_mem *mem);
extern void wrapper_NumericEditBox_reset(wrapper_NumericEditBox_mem *mem);
extern void wrapper_PushButton(SGLint32 EmitCondition, SGLbool MouseInside, SGLbool MousePressed, SGLbool MouseReleased, SGLbool KeyPressed, SGLint32 KeyCode, SGLbool KeyReleased, SGLbool *Selection, SGLbool *ButtonPressed, wrapper_PushButton_mem *mem);
extern void wrapper_PushButton_reset(wrapper_PushButton_mem *mem);
extern void wrapper_Scale(SGLfloat SizePx, SGLfloat Value, SGLfloat Range, SGLfloat FontSizeX, SGLfloat DistLargeGrad, SGLint32 NumberOfSmallGradPerLargeGrad, SGLfloat (*PosLargePx)[60UL], SGLfloat (*PosSmallPx)[120UL], SGLfloat (*ValuesNb)[60UL], SGLint32 *Integral, SGLint32 *Fractional, SGLbool (*LargeVisible)[60UL], SGLbool (*SmallVisible)[120UL], SGLbool *RunTimeMode);
extern void wrapper_Slider(SGLfloat MinValue, SGLfloat MaxValue, SGLfloat Value, SGLbool SetValue, SGLint32 Orientation, SGLfloat ValueDelta, SGLbool MousePressed, SGLbool MouseReleased, SGLint32 MouseButton, SGLbool MouseInside, SGLfloat ClickedValueX, SGLfloat ClickedValueY, SGLbool KeyForward, SGLbool KeyBackward, SGLbool KeyReturn, SGLbool HasFocus, SGLfloat *OutValue, SGLbool *OutValueEmit, SGLbool *SliderClicked, wrapper_Slider_mem *mem);
extern void wrapper_Slider_reset(wrapper_Slider_mem *mem);

#endif /* SDY1_SPECIFICATION_IMPORTED_FUNCTIONS_H */

/*********************************************************
 ** End of file
 ** End of generation: 2018-01-13T10:58:28
 *********************************************************/

