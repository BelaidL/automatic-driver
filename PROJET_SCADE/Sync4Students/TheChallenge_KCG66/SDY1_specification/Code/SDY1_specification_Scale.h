/*********************************************************
 **
 ** File  SDY1_specification_Scale.h
 **
 ** Specification File:  C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Scale.wgfx
 **
 ** Automatically generated by SCADE RP Simu
 ** Version 6.6.4 (build i14)
 **
 ** Date of generation: 2018-01-13T10:58:26
 ** Command line: ScadeRPSimu.exe -probes -outdir C:\Users\blagha85\Desktop\PROJET_SCADE\Sync4Students\TheChallenge_KCG66\SDY1_specification\Code -prefix SDY1_specification_ -texturemax 1024 C:\Users\blagha85\Desktop\PROJET_SCADE\RP\specification.rgfx C:\Users\blagha85\Desktop\PROJET_SCADE\RP\texture_table_1.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\textures\Widgets_textures.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_fonts.sft C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Styles_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_width.swt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_stipple.sst C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\InfiniteKnob.wgfx
 *********************************************************/

#ifndef SDY1_SPECIFICATION_SCALE_H
#define SDY1_SPECIFICATION_SCALE_H

#include "sgl_types.h"
#include "kcg_assign.h"

#include "SDY1_specification_Scale_element.h"

/* Accessors */
#define SDY1_specification_Scale_G_Length(_C_) (_C_)->Length
#define SDY1_specification_Scale_S_Length(_C_,_V_) (_C_)->Length = (_V_)
#define SDY1_specification_Scale_G_Width(_C_) (_C_)->Width
#define SDY1_specification_Scale_S_Width(_C_,_V_) (_C_)->Width = (_V_)
#define SDY1_specification_Scale_G_Angle(_C_) (_C_)->Angle
#define SDY1_specification_Scale_S_Angle(_C_,_V_) (_C_)->Angle = (_V_)
#define SDY1_specification_Scale_G_Value(_C_) (_C_)->Value
#define SDY1_specification_Scale_S_Value(_C_,_V_) (_C_)->Value = (_V_)
#define SDY1_specification_Scale_G_Range(_C_) (_C_)->Range
#define SDY1_specification_Scale_S_Range(_C_,_V_) (_C_)->Range = (_V_)
#define SDY1_specification_Scale_G_TextColor(_C_) (_C_)->TextColor
#define SDY1_specification_Scale_S_TextColor(_C_,_V_) (_C_)->TextColor = (_V_)
#define SDY1_specification_Scale_G_Font(_C_) (_C_)->Font
#define SDY1_specification_Scale_S_Font(_C_,_V_) (_C_)->Font = (_V_)
#define SDY1_specification_Scale_G_DistLargeGrad(_C_) (_C_)->DistLargeGrad
#define SDY1_specification_Scale_S_DistLargeGrad(_C_,_V_) (_C_)->DistLargeGrad = (_V_)
#define SDY1_specification_Scale_G_NumberOfSmallGradPerLargeGrad(_C_) (_C_)->NumberOfSmallGradPerLargeGrad
#define SDY1_specification_Scale_S_NumberOfSmallGradPerLargeGrad(_C_,_V_) (_C_)->NumberOfSmallGradPerLargeGrad = (_V_)
#define SDY1_specification_Scale_G_InvertTextSide(_C_) (_C_)->InvertTextSide
#define SDY1_specification_Scale_S_InvertTextSide(_C_,_V_) (_C_)->InvertTextSide = (_V_)
#define SDY1_specification_Scale_G_Integral(_C_) (_C_)->Integral
#define SDY1_specification_Scale_S_Integral(_C_,_V_) (_C_)->Integral = (_V_)
#define SDY1_specification_Scale_G_Fractional(_C_) (_C_)->Fractional
#define SDY1_specification_Scale_S_Fractional(_C_,_V_) (_C_)->Fractional = (_V_)
#define SDY1_specification_Scale_G_PosLargePx(_C_) (_C_)->PosLargePx
#define SDY1_specification_Scale_S_PosLargePx(_C_,_V_) kcg_assign((_C_)->PosLargePx, (_V_), sizeof(SGLfloat [60UL]))
#define SDY1_specification_Scale_G_ValueNb(_C_) (_C_)->ValueNb
#define SDY1_specification_Scale_S_ValueNb(_C_,_V_) kcg_assign((_C_)->ValueNb, (_V_), sizeof(SGLfloat [60UL]))
#define SDY1_specification_Scale_G_PosSmallPx(_C_) (_C_)->PosSmallPx
#define SDY1_specification_Scale_S_PosSmallPx(_C_,_V_) kcg_assign((_C_)->PosSmallPx, (_V_), sizeof(SGLfloat [120UL]))
#define SDY1_specification_Scale_G_RunTimeMode(_C_) (_C_)->RunTimeMode
#define SDY1_specification_Scale_S_RunTimeMode(_C_,_V_) (_C_)->RunTimeMode = (_V_)
#define SDY1_specification_Scale_G_LargeVisible(_C_) (_C_)->LargeVisible
#define SDY1_specification_Scale_S_LargeVisible(_C_,_V_) kcg_assign((_C_)->LargeVisible, (_V_), sizeof(SGLbool [60UL]))
#define SDY1_specification_Scale_G_SmallVisible(_C_) (_C_)->SmallVisible
#define SDY1_specification_Scale_S_SmallVisible(_C_,_V_) kcg_assign((_C_)->SmallVisible, (_V_), sizeof(SGLbool [120UL]))
#define SDY1_specification_Scale_G_MinMaxModeActive(_C_) (_C_)->MinMaxModeActive
#define SDY1_specification_Scale_S_MinMaxModeActive(_C_,_V_) (_C_)->MinMaxModeActive = (_V_)
#define SDY1_specification_Scale_G_FontSizeX(_C_) (_C_)->FontSizeX
#define SDY1_specification_Scale_S_FontSizeX(_C_,_V_) (_C_)->FontSizeX = (_V_)
#define SDY1_specification_Scale_G_FontSizeY(_C_) (_C_)->FontSizeY
#define SDY1_specification_Scale_S_FontSizeY(_C_,_V_) (_C_)->FontSizeY = (_V_)
#define SDY1_specification_Scale_HOOK(_C_,_F_,_D_) 

/* Context type */
typedef struct SDY1_specification_typ_Scale_ {
  /* ------------------------- inputs --------------------------- */
  SGLfloat Length;
  SGLfloat Width;
  SGLfloat Angle;
  SGLfloat Value;
  SGLfloat Range;
  SGLint32 TextColor;
  SGLint32 Font;
  SGLfloat DistLargeGrad;
  SGLint32 NumberOfSmallGradPerLargeGrad;
  SGLbool InvertTextSide;
  /* ------------------------- locals --------------------------- */
  SGLint32 Integral;
  SGLint32 Fractional;
  SGLfloat PosLargePx[60UL];
  SGLfloat ValueNb[60UL];
  SGLfloat PosSmallPx[120UL];
  SGLbool RunTimeMode;
  SGLbool LargeVisible[60UL];
  SGLbool SmallVisible[120UL];
  SGLbool MinMaxModeActive;
  SGLfloat FontSizeX;
  SGLfloat FontSizeY;
  /* ------------------------- parent priority ------------------ */
  SGLint32 _parentPriority;
} SDY1_specification_typ_Scale;

/* Associated functions */
extern void SDY1_specification_Scale_init(SDY1_specification_typ_Scale *pContext);
extern void SDY1_specification_Scale_predraw(SDY1_specification_typ_Scale *pContext);
extern void SDY1_specification_Scale_draw(SDY1_specification_typ_Scale *pContext, SGLint32 pPriority);
extern SDY1_specification_typ_Scale * SDY1_specification_Scale_alloc(void);
extern void SDY1_specification_Scale_free(SDY1_specification_typ_Scale *pContext);

#endif /* SDY1_SPECIFICATION_SCALE_H */

/*********************************************************
 ** End of file
 ** End of generation: 2018-01-13T10:58:26
 *********************************************************/

