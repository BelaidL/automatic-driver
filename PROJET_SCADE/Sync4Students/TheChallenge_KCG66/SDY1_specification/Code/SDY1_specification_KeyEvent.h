/*********************************************************
 **
 ** File  SDY1_specification_KeyEvent.h
 **
 ** Specification File:  C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\KeyEvent.wgfx
 **
 ** Automatically generated by SCADE RP Simu
 ** Version 6.6.4 (build i14)
 **
 ** Date of generation: 2018-01-13T10:58:25
 ** Command line: ScadeRPSimu.exe -probes -outdir C:\Users\blagha85\Desktop\PROJET_SCADE\Sync4Students\TheChallenge_KCG66\SDY1_specification\Code -prefix SDY1_specification_ -texturemax 1024 C:\Users\blagha85\Desktop\PROJET_SCADE\RP\specification.rgfx C:\Users\blagha85\Desktop\PROJET_SCADE\RP\texture_table_1.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\textures\Widgets_textures.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_fonts.sft C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Styles_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_width.swt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_stipple.sst C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\InfiniteKnob.wgfx
 *********************************************************/

#ifndef SDY1_SPECIFICATION_KEYEVENT_H
#define SDY1_SPECIFICATION_KEYEVENT_H

#include "sgl_types.h"


/* Accessors */
#define SDY1_specification_KeyEvent_G_EmitCondition(_C_) (_C_)->EmitCondition
#define SDY1_specification_KeyEvent_S_EmitCondition(_C_,_V_) (_C_)->EmitCondition = (_V_)
#define SDY1_specification_KeyEvent_G_HasFocus(_C_) (_C_)->HasFocus
#define SDY1_specification_KeyEvent_S_HasFocus(_C_,_V_) (_C_)->HasFocus = (_V_)
#define SDY1_specification_KeyEvent_G_Event(_C_) (_C_)->Event
#define SDY1_specification_KeyEvent_S_Event(_C_,_V_) (_C_)->Event = (_V_)
#define SDY1_specification_KeyEvent_G_Code(_C_) (_C_)->Code
#define SDY1_specification_KeyEvent_S_Code(_C_,_V_) (_C_)->Code = (_V_)
#define SDY1_specification_KeyEvent_G_Pressed(_C_) (_C_)->Pressed
#define SDY1_specification_KeyEvent_S_Pressed(_C_,_V_) (_C_)->Pressed = (_V_)
#define SDY1_specification_KeyEvent_G_Released(_C_) (_C_)->Released
#define SDY1_specification_KeyEvent_S_Released(_C_,_V_) (_C_)->Released = (_V_)
#define SDY1_specification_KeyEvent_G_LocalReleased(_C_) (_C_)->LocalReleased
#define SDY1_specification_KeyEvent_S_LocalReleased(_C_,_V_) (_C_)->LocalReleased = (_V_)
#define SDY1_specification_KeyEvent_G_PreviousLocalPressed(_C_) (_C_)->PreviousLocalPressed
#define SDY1_specification_KeyEvent_S_PreviousLocalPressed(_C_,_V_) (_C_)->PreviousLocalPressed = (_V_)
#define SDY1_specification_KeyEvent_G_LocalPressed(_C_) (_C_)->LocalPressed
#define SDY1_specification_KeyEvent_S_LocalPressed(_C_,_V_) (_C_)->LocalPressed = (_V_)
#define SDY1_specification_KeyEvent_G_PreviousPressed(_C_) (_C_)->PreviousPressed
#define SDY1_specification_KeyEvent_S_PreviousPressed(_C_,_V_) (_C_)->PreviousPressed = (_V_)
#define SDY1_specification_KeyEvent_G_LocalCode(_C_) (_C_)->LocalCode
#define SDY1_specification_KeyEvent_S_LocalCode(_C_,_V_) (_C_)->LocalCode = (_V_)
#define SDY1_specification_KeyEvent_HOOK(_C_,_F_,_D_) 

/* Context type */
typedef struct SDY1_specification_typ_KeyEvent_ {
  /* ------------------------- inputs --------------------------- */
  SGLint32 EmitCondition;
  SGLint32 HasFocus;
  /* ------------------------- outputs -------------------------- */
  SGLbool Event;
  SGLint32 Code;
  SGLbool Pressed;
  SGLbool Released;
  /* ------------------------- locals --------------------------- */
  SGLbool LocalReleased;
  SGLbool PreviousLocalPressed;
  SGLbool LocalPressed;
  SGLbool PreviousPressed;
  SGLint32 LocalCode;
  /* ------------------------- parent priority ------------------ */
  SGLint32 _parentPriority;
} SDY1_specification_typ_KeyEvent;

/* Associated functions */
extern void SDY1_specification_KeyEvent_init(SDY1_specification_typ_KeyEvent *pContext);
extern void SDY1_specification_KeyEvent_predraw(SDY1_specification_typ_KeyEvent *pContext);
extern void SDY1_specification_KeyEvent_draw(SDY1_specification_typ_KeyEvent *pContext, SGLint32 pPriority);
extern SDY1_specification_typ_KeyEvent * SDY1_specification_KeyEvent_alloc(void);
extern void SDY1_specification_KeyEvent_free(SDY1_specification_typ_KeyEvent *pContext);

#endif /* SDY1_SPECIFICATION_KEYEVENT_H */

/*********************************************************
 ** End of file
 ** End of generation: 2018-01-13T10:58:25
 *********************************************************/

