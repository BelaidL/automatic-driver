/*********************************************************
 **
 ** File  SDY1_specification_Cursor.h
 **
 ** Specification File:  C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Cursor.wgfx
 **
 ** Automatically generated by SCADE RP Simu
 ** Version 6.6.4 (build i14)
 **
 ** Date of generation: 2018-01-13T10:58:27
 ** Command line: ScadeRPSimu.exe -probes -outdir C:\Users\blagha85\Desktop\PROJET_SCADE\Sync4Students\TheChallenge_KCG66\SDY1_specification\Code -prefix SDY1_specification_ -texturemax 1024 C:\Users\blagha85\Desktop\PROJET_SCADE\RP\specification.rgfx C:\Users\blagha85\Desktop\PROJET_SCADE\RP\texture_table_1.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\textures\Widgets_textures.stt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_fonts.sft C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Styles_colors.sct C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_width.swt C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\Common\Widgets_line_stipple.sst C:\Program Files\ANSYS Inc\v180\SCADE\SCADE Test\Rapid Prototyper\Widgets\InfiniteKnob.wgfx
 *********************************************************/

#ifndef SDY1_SPECIFICATION_CURSOR_H
#define SDY1_SPECIFICATION_CURSOR_H

#include "sgl_types.h"
#include "kcg_assign.h"


/* Accessors */
#define SDY1_specification_Cursor_G_AreaSizeX(_C_) (_C_)->AreaSizeX
#define SDY1_specification_Cursor_S_AreaSizeX(_C_,_V_) (_C_)->AreaSizeX = (_V_)
#define SDY1_specification_Cursor_G_AreaSizeY(_C_) (_C_)->AreaSizeY
#define SDY1_specification_Cursor_S_AreaSizeY(_C_,_V_) (_C_)->AreaSizeY = (_V_)
#define SDY1_specification_Cursor_G_String(_C_) (*(_C_)->String)
#define SDY1_specification_Cursor_S_String(_C_,_V_) (_C_)->String = &(_V_)
#define SDY1_specification_Cursor_G_HorizontalAlignment(_C_) (_C_)->HorizontalAlignment
#define SDY1_specification_Cursor_S_HorizontalAlignment(_C_,_V_) (_C_)->HorizontalAlignment = (_V_)
#define SDY1_specification_Cursor_G_CharIndex(_C_) (_C_)->CharIndex
#define SDY1_specification_Cursor_S_CharIndex(_C_,_V_) (_C_)->CharIndex = (_V_)
#define SDY1_specification_Cursor_G_Font(_C_) (_C_)->Font
#define SDY1_specification_Cursor_S_Font(_C_,_V_) (_C_)->Font = (_V_)
#define SDY1_specification_Cursor_G_EnablePositionComputation(_C_) (_C_)->EnablePositionComputation
#define SDY1_specification_Cursor_S_EnablePositionComputation(_C_,_V_) (_C_)->EnablePositionComputation = (_V_)
#define SDY1_specification_Cursor_G_CursorVisibility(_C_) (_C_)->CursorVisibility
#define SDY1_specification_Cursor_S_CursorVisibility(_C_,_V_) (_C_)->CursorVisibility = (_V_)
#define SDY1_specification_Cursor_G_ClickedPositionX(_C_) (_C_)->ClickedPositionX
#define SDY1_specification_Cursor_S_ClickedPositionX(_C_,_V_) (_C_)->ClickedPositionX = (_V_)
#define SDY1_specification_Cursor_G_ClickedPositionY(_C_) (_C_)->ClickedPositionY
#define SDY1_specification_Cursor_S_ClickedPositionY(_C_,_V_) (_C_)->ClickedPositionY = (_V_)
#define SDY1_specification_Cursor_G_NewClick(_C_) (_C_)->NewClick
#define SDY1_specification_Cursor_S_NewClick(_C_,_V_) (_C_)->NewClick = (_V_)
#define SDY1_specification_Cursor_G_EnableLineSizeComputation(_C_) (_C_)->EnableLineSizeComputation
#define SDY1_specification_Cursor_S_EnableLineSizeComputation(_C_,_V_) (_C_)->EnableLineSizeComputation = (_V_)
#define SDY1_specification_Cursor_G_TextColor(_C_) (_C_)->TextColor
#define SDY1_specification_Cursor_S_TextColor(_C_,_V_) (_C_)->TextColor = (_V_)
#define SDY1_specification_Cursor_G_CursorPosY(_C_) (_C_)->CursorPosY
#define SDY1_specification_Cursor_S_CursorPosY(_C_,_V_) (_C_)->CursorPosY = (_V_)
#define SDY1_specification_Cursor_G_NewIndexAfterClick(_C_) (_C_)->NewIndexAfterClick
#define SDY1_specification_Cursor_S_NewIndexAfterClick(_C_,_V_) (_C_)->NewIndexAfterClick = (_V_)
#define SDY1_specification_Cursor_G_LineFull(_C_) (_C_)->LineFull
#define SDY1_specification_Cursor_S_LineFull(_C_,_V_) (_C_)->LineFull = (_V_)
#define SDY1_specification_Cursor_G_LineSizeX(_C_) (_C_)->LineSizeX
#define SDY1_specification_Cursor_S_LineSizeX(_C_,_V_) (_C_)->LineSizeX = (_V_)
#define SDY1_specification_Cursor_G_LineSizeY(_C_) (_C_)->LineSizeY
#define SDY1_specification_Cursor_S_LineSizeY(_C_,_V_) (_C_)->LineSizeY = (_V_)
#define SDY1_specification_Cursor_G_NbLines(_C_) (_C_)->NbLines
#define SDY1_specification_Cursor_S_NbLines(_C_,_V_) (_C_)->NbLines = (_V_)
#define SDY1_specification_Cursor_G_CursorPosX(_C_) (_C_)->CursorPosX
#define SDY1_specification_Cursor_S_CursorPosX(_C_,_V_) (_C_)->CursorPosX = (_V_)
#define SDY1_specification_Cursor_G_CharSize(_C_) (_C_)->CharSize
#define SDY1_specification_Cursor_S_CharSize(_C_,_V_) (_C_)->CharSize = (_V_)
#define SDY1_specification_Cursor_G_FontSizeX(_C_) (_C_)->FontSizeX
#define SDY1_specification_Cursor_S_FontSizeX(_C_,_V_) (_C_)->FontSizeX = (_V_)
#define SDY1_specification_Cursor_G_FontSizeY(_C_) (_C_)->FontSizeY
#define SDY1_specification_Cursor_S_FontSizeY(_C_,_V_) (_C_)->FontSizeY = (_V_)
#define SDY1_specification_Cursor_HOOK(_C_,_F_,_D_) 

/* Context type */
typedef struct SDY1_specification_typ_Cursor_ {
  /* ------------------------- inputs --------------------------- */
  SGLfloat AreaSizeX;
  SGLfloat AreaSizeY;
  SGLuint8 (*String)[255UL];
  SGLint32 HorizontalAlignment;
  SGLint32 CharIndex;
  SGLint32 Font;
  SGLbool EnablePositionComputation;
  SGLbool CursorVisibility;
  SGLfloat ClickedPositionX;
  SGLfloat ClickedPositionY;
  SGLbool NewClick;
  SGLbool EnableLineSizeComputation;
  SGLint32 TextColor;
  /* ------------------------- outputs -------------------------- */
  SGLfloat CursorPosY;
  SGLint32 NewIndexAfterClick;
  SGLbool LineFull;
  SGLfloat LineSizeX;
  SGLfloat LineSizeY;
  SGLint32 NbLines;
  /* ------------------------- locals --------------------------- */
  SGLfloat CursorPosX;
  SGLfloat CharSize;
  SGLfloat FontSizeX;
  SGLfloat FontSizeY;
  /* ------------------------- parent priority ------------------ */
  SGLint32 _parentPriority;
} SDY1_specification_typ_Cursor;

/* Associated functions */
extern void SDY1_specification_Cursor_init(SDY1_specification_typ_Cursor *pContext);
extern void SDY1_specification_Cursor_predraw(SDY1_specification_typ_Cursor *pContext);
extern void SDY1_specification_Cursor_draw(SDY1_specification_typ_Cursor *pContext, SGLint32 pPriority);
extern SDY1_specification_typ_Cursor * SDY1_specification_Cursor_alloc(void);
extern void SDY1_specification_Cursor_free(SDY1_specification_typ_Cursor *pContext);

#endif /* SDY1_SPECIFICATION_CURSOR_H */

/*********************************************************
 ** End of file
 ** End of generation: 2018-01-13T10:58:27
 *********************************************************/

